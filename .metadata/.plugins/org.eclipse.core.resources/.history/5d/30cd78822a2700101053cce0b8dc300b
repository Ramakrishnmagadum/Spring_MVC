package HttpSession;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.validation.Valid;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller
public class Homecontroller {

	@RequestMapping("/")
//	 HttpServletRequest request --for Every request of this URL
//	It will check Cookies with name "username"  -->and display in input box if present..
	public String gethomepage(@ModelAttribute("student") StudentBean student, HttpServletRequest request) {

//		Reading Cookies if avaliable and showing in first request Page
		Cookie[] cookies = request.getCookies();
		if(cookies!=null) {
			for (Cookie temp : cookies) {
				if (temp.getName().equals("username")) {
					student.setUsername(temp.getValue());
				}
			}
		}
		return "Home-page";
	}

	@RequestMapping("/resultpage")
//	 HttpServletResponse response  --here response object is created and By response we can send cookies and it stored in the Browser...
	public String getresultPage(@ModelAttribute("student") StudentBean student, HttpServletResponse response) {

//		add input to the Cookies ,so in any page we can get the values by using this Cookies...
//		Creating Cookies and it will add cookies to browser..
		Cookie cookie = new Cookie("username", student.getUsername());
		response.addCookie(cookie);
		return "resultpage";
	}

//	in this page without passing any object --> By using Cookies setting values..it will manage session ...
	@RequestMapping("/cookietestPage")
	public String showcookiePage(Model model, HttpServletRequest request) {
		Cookie[] cookies = request.getCookies();

		for (Cookie temp : cookies) {
			if (temp.getName().equals("username")) {
				model.addAttribute("username", temp.getValue());
			}
		}
		return "showCookkie";
	}

//	Using Annotation to read the Cookie Values...
	@RequestMapping("/cookieAnnotation")
//	@CookieValue("username") String username --> this will get Cookies Values and add to the Model --so we can able to show in View Page..
//	@CookieValue(value="username", required=false) -->this will make non mandetery of this cookies....
	public String ShowcookieAnnotation(@CookieValue(value="username", required=false) String username, Model model) {
		model.addAttribute("username", username);
		return "cookieAnnotation";
	}

}
